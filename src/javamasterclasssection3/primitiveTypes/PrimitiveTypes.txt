PRIMITIVE TYPES
---------------
Each Primitive Type occupies a different amount of memory.

    8 Types
        1. int (most common)
        2. double (most common)
        3. boolean (most common)
        4. long (may use from time to time)
        5. char (may use from time to time)
        6. byte (rarely used, if at all)
        7. short (rarely used, if at all)
        8. float (rarely used, if at all)

byte
    - occupies 8 bits
    - has a width of 8
    - Not often used b/c the space is quite small
short
    - occupies 16 bits
    - has a width of 16
int
    - occupies 32 bits
    - has a width of 32

long
    - occupies 64 bits
    - has a width of 64
    - best practice to use an uppercase "L" when assigning a long
        Ex: long myExampleLong = 100L;
    - an int fits fully into a long, so if you assign an int into a long, it converts an int into a long, without throwing an error
        Ex: long myExampleLong = 100; //this will still work
---------------

Integer is a Wrapper Class
 - Java uses the concept of a Wrapper class for all eight primitive types - In the case of an int, we can use Integer, and by doing so it gives us ways to perform operations on an int.

-----------------------
Overflow and Underflow
-----------------------

NOTE: If you try and put a value larger than the maximum value in Java,
      or a value smaller than the minimum value in Java, then you will
      get an OVERFLOW in the case of the maximum value or
      an UNDERFLOW in the case of the minimum.

      The computer just skips back to the min. number or the max. number, which is
      usually not what you want.